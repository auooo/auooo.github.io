<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>auooo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-03-13T15:11:21.334Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>auooo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>android_test01</title>
    <link href="http://yoursite.com/2016/03/13/android-test01/"/>
    <id>http://yoursite.com/2016/03/13/android-test01/</id>
    <published>2016-03-13T13:19:16.000Z</published>
    <updated>2016-03-13T15:11:21.334Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#setContentView(int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setContentView(int)&lt;/a&gt;) 定义布局&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#setContentView(int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setContentVi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/03/13/hello-world/"/>
    <id>http://yoursite.com/2016/03/13/hello-world/</id>
    <published>2016-03-13T07:38:06.629Z</published>
    <updated>2016-03-13T09:00:14.071Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>android_activity</title>
    <link href="http://yoursite.com/2016/03/11/android_activity/"/>
    <id>http://yoursite.com/2016/03/11/android_activity/</id>
    <published>2016-03-10T16:00:00.000Z</published>
    <updated>2016-03-13T13:24:43.871Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;2016.3.11&lt;/li&gt;
&lt;li&gt;android-sdk-23&lt;/li&gt;
&lt;li&gt;文中的部分中文术语是自己看文档理解着翻译的，可能有不准确之处，欢迎指出&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Activity-概述&quot;&gt;&lt;a href=&quot;#Activity-概述&quot; class=&quot;headerlink&quot; title=&quot;Activity 概述&quot;&gt;&lt;/a&gt;Activity 概述&lt;/h1&gt;&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/components/activities.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方 API 文档&lt;/a&gt;中对Activity的定义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Activity&lt;/a&gt; is an application component that provides a screen with which users can interact in order to do something, such as dial the phone, take a photo, send an email, or view a map. Each activity is given a window in which to draw its user interface. The window typically fills the screen, but may be smaller than the screen and float on top of other windows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Activity 作为应用程序的组件之一，在屏幕上显示应用程序的界面，用于和用户的交互。&lt;/p&gt;
&lt;p&gt;通常而言，activity 提供的界面窗口会占满整个屏幕，但是也可能小于屏幕尺寸，从而浮现在其他应用程序窗口之上（例如带有 &lt;a href=&quot;http://developer.android.com/reference/android/R.attr.html#windowIsFloating&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;windowIsFloating&lt;/a&gt; set 的主题），或者嵌入在其他 Activity 中(例如使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/ActivityGroup.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ActivityGroup&lt;/a&gt;)。&lt;/p&gt;
&lt;h3 id=&quot;代码定义&quot;&gt;&lt;a href=&quot;#代码定义&quot; class=&quot;headerlink&quot; title=&quot;代码定义&quot;&gt;&lt;/a&gt;代码定义&lt;/h3&gt;&lt;p&gt;Activity 类的类定义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ContextThemeWrapper&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LayoutInflater&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Factory2&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Window&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Callback&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;KeyEvent&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Callback&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 &lt;span class=&quot;title&quot;&gt;OnCreateContextMenuListener&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;ComponentCallbacks2&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Window&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;OnWindowDismissedCallback&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一个应用程序 (application)至少要有一个 main activity，在用户启动 application 时显示&lt;/li&gt;
&lt;li&gt;一般而言， application 都有多个 activity，activity 之间可以相互调&lt;/li&gt;
&lt;li&gt;每当一个新的 activity 启动，之前的 activity 就会停止 (stopped) ，但是系统会将这个停止的 activity 保存在返回栈 (back stack) 中&lt;/li&gt;
&lt;li&gt;新的 activity 启动，它会被压入返回栈中，并获得用户焦点&lt;/li&gt;
&lt;li&gt;back stack 遵循基本的先进后出 (last-in, first-out) 的栈规则&lt;/li&gt;
&lt;li&gt;当前栈顶的 activity 完成后(用户按下&lt;em&gt;返回&lt;/em&gt; (&lt;em&gt;Back&lt;/em&gt;) 按键)，该 activity 出栈(并被摧毁 (destroyed))，之前的 activity 恢复&lt;/li&gt;
&lt;li&gt;activity 状态的改变会触发不同的 activity 生命周期 (activity lifecycle) 的回调方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;创建-Activity&quot;&gt;&lt;a href=&quot;#创建-Activity&quot; class=&quot;headerlink&quot; title=&quot;创建 Activity&quot;&gt;&lt;/a&gt;创建 Activity&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;创建 Activity (或者其子类)的子类&lt;/li&gt;
&lt;li&gt;在创建的子类中实现生命周期的各种回调函数&lt;/li&gt;
&lt;li&gt;其中最重要的两个回调函数&lt;ul&gt;
&lt;li&gt;onCreate(Bundle): activity初始化。1.使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#setContentView(int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setContentView(int)&lt;/a&gt;) 定义布局。2.使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#findViewById(int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;findViewById(int)&lt;/a&gt;) 获取需要的控件&lt;/li&gt;
&lt;li&gt;onPause(): 在这里保存并提交用户的修改信息(通常使用 &lt;a href=&quot;http://developer.android.com/reference/android/content/ContentProvider.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ContentProvider&lt;/a&gt; 来保存数据)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实现用户界面&quot;&gt;&lt;a href=&quot;#实现用户界面&quot; class=&quot;headerlink&quot; title=&quot;实现用户界面&quot;&gt;&lt;/a&gt;实现用户界面&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;用户界面由各种 views —— 来自 &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View&lt;/a&gt; 类的对象提供&lt;/li&gt;
&lt;li&gt;android 提供了一系列的预定义 views 以供设计和组织布局&lt;ul&gt;
&lt;li&gt;Widgets: 可视化的交互元素&lt;/li&gt;
&lt;li&gt;Layouts: 来自 &lt;a href=&quot;http://developer.android.com/reference/android/view/ViewGroup.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ViewGroup&lt;/a&gt; 的 views，提供独特的布局模型&lt;/li&gt;
&lt;li&gt;自己定义: &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/view/ViewGroup.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ViewGroup&lt;/a&gt; 的子类&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;通常，布局定义在 XML 布局文件中，实现界面设计与行为代码的分离 (&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#setContentView(int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setContentView(int)&lt;/a&gt;)) 方法&lt;/li&gt;
&lt;li&gt;也可以在 activity 中通过代码实现界面设计(参考 UI 部分)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;在-manifest-中声明-activity&quot;&gt;&lt;a href=&quot;#在-manifest-中声明-activity&quot; class=&quot;headerlink&quot; title=&quot;在 manifest 中声明 activity&quot;&gt;&lt;/a&gt;在 manifest 中声明 activity&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;activity&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;.ExampleActivity&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;manifest&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;要使用 activity 则必须在 manifest 文件中声明&lt;/li&gt;
&lt;li&gt;在 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/application-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;application&amp;gt;&lt;/a&gt; 节点中增加 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/activity-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;activity&amp;gt;&lt;/a&gt; 节点&lt;/li&gt;
&lt;li&gt;activity 节点可以增加其他可选属性，如 label，icon，theme 等，但是 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/activity-element.html#nm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android:name&lt;/a&gt; 属性是必须的(参考文章 &lt;a href=&quot;http://android-developers.blogspot.com/2011/06/things-that-cannot-change.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Things That Cannot Changed&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用-intent-filters&quot;&gt;&lt;a href=&quot;#使用-intent-filters&quot; class=&quot;headerlink&quot; title=&quot;使用 intent filters&quot;&gt;&lt;/a&gt;使用 intent filters&lt;/h4&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;activity&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;.ExampleActivity&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:icon&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/app_icon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.intent.action.MAIN&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.intent.category.LAUNCHER&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;activity&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/manifest/activity-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;activity&amp;gt;&lt;/a&gt; 节点使用各种 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/intent-filter-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/a&gt; 元素来声明其他应用程序元素如何调用该 activity&lt;/li&gt;
&lt;li&gt;不被其他 application 调用的 activity 则不需要任何的 intent filter，只有自己的 application 可以通过显式 intent 来调用&lt;/li&gt;
&lt;li&gt;应当只有一个 activity 有 “main” action 和 “launchy” category&lt;/li&gt;
&lt;li&gt;想要使用隐式 intent 调用 activity，必须添加 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/intent-filter-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/a&gt; 节点，在该节点中要包含一个 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/action-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;action&amp;gt;&lt;/a&gt; 节点，此外，还可选添加一个 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/category-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;category&amp;gt;&lt;/a&gt; 和/或 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/data-element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;data&amp;gt;&lt;/a&gt; 节点。这三种元素指明了 activity 响应的 intent 类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;启动-activity&quot;&gt;&lt;a href=&quot;#启动-activity&quot; class=&quot;headerlink&quot; title=&quot;启动 activity&quot;&gt;&lt;/a&gt;启动 activity&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;startActivity()&lt;/a&gt;) 方法启动活动，该方法接收一个用于描述目标 activity 的 &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;intent 可以显式地指定想要启动的 activity&lt;/li&gt;
&lt;li&gt;intent 可以隐式地描述你想要进行的 action 类型(系统根据 intent-filter 中的描述来匹配符合描述类型的 activity)&lt;/li&gt;
&lt;li&gt;intent 中可以携带少量的数据，供启动的 activity 使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;显式-intent&quot;&gt;&lt;a href=&quot;#显式-intent&quot; class=&quot;headerlink&quot; title=&quot;显式 intent&quot;&gt;&lt;/a&gt;显式 intent&lt;/h3&gt;&lt;p&gt;eg.启动名为 &lt;em&gt;SignInActivity&lt;/em&gt; 的 activity&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, SignInActivity.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;隐式-intent&quot;&gt;&lt;a href=&quot;#隐式-intent&quot; class=&quot;headerlink&quot; title=&quot;隐式 intent&quot;&gt;&lt;/a&gt;隐式 intent&lt;/h3&gt;&lt;p&gt;intent 指明要操作的行为，然后通过 intent 调用能够响应该行为的 activity。若有多个响应 activity，则会提示用户进行选择。&lt;/p&gt;
&lt;p&gt;eg.发送 email&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(Intent.ACTION_SEND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intent.putExtra(Intent.EXTRA_EMAIL, recipientArray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#EXTRA_EMAIL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EXTRA_EMAIL&lt;/a&gt; 这个 extra 是电子邮件地址的字符串序列，指明了邮件的接收地址。&lt;/p&gt;
&lt;h3 id=&quot;启动-activity-并获取结果&quot;&gt;&lt;a href=&quot;#启动-activity-并获取结果&quot; class=&quot;headerlink&quot; title=&quot;启动 activity 并获取结果&quot;&gt;&lt;/a&gt;启动 activity 并获取结果&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;startActivityForResult&lt;/a&gt;) 来接收启动的 activity 返回的结果。&lt;/li&gt;
&lt;li&gt;为了接收结果，还要实现 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onActivityResult(int, int, android.content.Intent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onActivityResult()&lt;/a&gt;) 方法。&lt;/li&gt;
&lt;li&gt;当启动的 activity 结束后，会返回一个 &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intent&lt;/a&gt; 到 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onActivityResult(int, int, android.content.Intent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onActivityResult()&lt;/a&gt;) 方法中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.使用 Intent 让用户选取一个联系人，然后在源 activity 中执行某些行为&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pickContact&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Create an intent to &quot;pick&quot; a contact, as defined by the content Prover URI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(Intent.Action_PICK, Contacts.CONTENT_URI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	startActivity(intent, PICK_CONTACT_REQUEST);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// If the request went well (OK) and the request was PICK_CONTACT_REQUEST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestCode == Activity.RESULT_OK &amp;amp;&amp;amp; requestCode == PICK_CONTACT_REQUEST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Perform a query to the contact&#39;s content provider for the contact&#39;s name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Cursor cursor = getContentResolver().query(data.getData(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[] &amp;#123;Contacts.DISPLAY_NAME&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;													&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cursor.moveToFirst()) &amp;#123;	&lt;span class=&quot;comment&quot;&gt;// True if the cursor is not empty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ColumnIndex = cursor.getColumnIndex(Contacts.DISPLAY_NAME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			String name = cursor.getString(columnIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Do something with the selected contact&#39;s name ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面的例子中，先检查 request 是否成功，若成功，则 &lt;em&gt;resultCode&lt;/em&gt; 的值是 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#RESULT_OK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RESULT_OK&lt;/a&gt;。然后检查 request 的响应结果是不是已知的，本例中，&lt;em&gt;resultCode&lt;/em&gt; 应当和 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;startActivityForResult&lt;/a&gt;) 方法传递的第二个参数 (PICK_CONTACT_REQUEST) 相匹配。检测满足条件后，代码开始处理 activity 返回的结果，这个结果包含在一个 &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intent&lt;/a&gt; 对象中（data 参数）。&lt;/p&gt;
&lt;p&gt;然后，&lt;a href=&quot;http://developer.android.com/reference/android/content/ContentResolver.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;contentResolver&lt;/a&gt; 向 content provider 进行查询，返回一个包含所需数据的 &lt;a href=&quot;http://developer.android.com/reference/android/database/Cursor.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cursor&lt;/a&gt; 对象。&lt;/p&gt;
&lt;h2 id=&quot;结束-Activity&quot;&gt;&lt;a href=&quot;#结束-Activity&quot; class=&quot;headerlink&quot; title=&quot;结束 Activity&quot;&gt;&lt;/a&gt;结束 Activity&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;调用 activity 的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#finish(&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;finish()&lt;/a&gt;) 方法结束 activity&lt;/li&gt;
&lt;li&gt;调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#finishActivity(int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;finishActivity&lt;/a&gt;) 方法单独关闭在之前启动的 activity&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注：大多数情况下，不应当通过上述方法显式关闭 activity。Android 系统会管理为我们管理 activity 的生命周期，自己调用这些方法会显著地影响用户体验。因此，只有当我们确定不希望用户再回到这个 activity 的实例时才会使用这些方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;管理-Activity-的生命周期-Activity-Lifecycle&quot;&gt;&lt;a href=&quot;#管理-Activity-的生命周期-Activity-Lifecycle&quot; class=&quot;headerlink&quot; title=&quot;管理 Activity 的生命周期 (Activity Lifecycle)&quot;&gt;&lt;/a&gt;管理 Activity 的生命周期 (Activity Lifecycle)&lt;/h2&gt;&lt;p&gt;提到生命周期首先想到的果断应当就是这个生命周期图了（显示在方框中的就是能实现的各种回调方法）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.auooo.com/wp-content/uploads/2016/03/activity_lifecycle.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个 activity 主要有三种基本状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resumed: activity 在屏幕前台运行并且有用户焦点(该状态有时候也被成为 “running”)&lt;/li&gt;
&lt;li&gt;Paused: 另一个 activity 在屏幕前台且有焦点，但是这个 activity 仍然是可见的。也就是说，另一个 activity 在这个 activity 的上层，&lt;/li&gt;
&lt;li&gt;Stopped&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实现生命周期的回调&quot;&gt;&lt;a href=&quot;#实现生命周期的回调&quot; class=&quot;headerlink&quot; title=&quot;实现生命周期的回调&quot;&gt;&lt;/a&gt;实现生命周期的回调&lt;/h3&gt;&lt;p&gt;当 activity 在不同状态改变时，会触发各种回调方法。这些回调方法都能被重写。重写回调方法时，必须调用父类的方法实现。如下例所示：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ExampleActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The activity is being created.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The activity is about to become visible.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onResume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The activity has become visible (it is now &quot;resumed&quot;).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onPause();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Another activity is taking focus (this activity is about to be &quot;paused&quot;).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The activity is no longer visible (it is now &quot;stopped&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onDestroy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The activity is about to be destroyed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上例中代码的一系列方法定义了 activity 的整个生命周期。这些方法能够监控 activity 的三个内部生命周期循环：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完整生命周期(entire lifetime)： 从调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt; 方法开始，到调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onDestroy()&quot; title=&quot;onDestroy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onDestroy()&lt;/a&gt; 方法结束 &lt;ul&gt;
&lt;li&gt;在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt; 方法中，activity 进行一些全局操作。例如定义布局&lt;/li&gt;
&lt;li&gt;在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onDestroy()&quot; title=&quot;onDestroy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onDestroy()&lt;/a&gt; 方法中，释放所有的剩余资源&lt;/li&gt;
&lt;li&gt;例如，某个 activity 具有一个后台运行的线程 (Thread) 用于下载数据，可以在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt; 中创建线程，在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onDestroy()&quot; title=&quot;onDestroy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onDestroy()&lt;/a&gt; 中终止 (stop) 线程 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可见生命周期(visible lifetime)： 从调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStart()&quot; title=&quot;onStart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStart()&lt;/a&gt; 方法开始，到调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt; 方法结束&lt;ul&gt;
&lt;li&gt;在这个生命周期中，用户能在屏幕上看见这个 activity 并且与之交互。&lt;/li&gt;
&lt;li&gt;在这两个方法之间，管理展现 activity 所需要的资源 (resources)&lt;/li&gt;
&lt;li&gt;例如，在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStart()&quot; title=&quot;onStart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStart()&lt;/a&gt; 方法中注册一个 &lt;a href=&quot;http://developer.android.com/reference/android/content/BroadcastReceiver.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BroadcastReceiver&lt;/a&gt;，用于监控那些影响 UI 的改变。当这个 activity 对用户不可见时，在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt; 方法中注销该广播接收器 (BroadcastReceiver)&lt;/li&gt;
&lt;li&gt;由于 activity 经常会在可见与不可见状态间切换，因此在 activity 的生命周期中，&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStart()&quot; title=&quot;onStart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStart()&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt; 可能会被多次调用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;前台生命周期(foregroud lifetime)： 从调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onResume()&quot; title=&quot;onResume&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onResume()&lt;/a&gt; 方法开始，到调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt; 方法结束&lt;ul&gt;
&lt;li&gt;在这个生命周期时，activity 在所有其他 activity 之上并具有用户输入焦点(user input focus) &lt;/li&gt;
&lt;li&gt;activity 会经常进入和退出前台状态（例如设备休眠，或者某个对话 (dialog) 弹出），也就是说 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onResume()&quot; title=&quot;onResume&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onResume()&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt; 方法会经常被调用。&lt;/li&gt;
&lt;li&gt;因此，这两个方法中的代码应当是轻量级的，减少用户在状态转换时的等待时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生命周期回调方法总结表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;方法&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;描述&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Killable after?&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Next&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 activity 第一次创建时被调用。&lt;br&gt;在这里进行所有的正常静态初始化 —— 创建视图 (views), 绑定数据到列表 (list) 等等。&lt;br&gt;该方法会传入一个 Bundle 对象，如果 activity 之前的状态被保存过，这个 Bundle 对象中就会保存这个状态信息，在这之后总是跟着 onStart() 方法&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;否&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;onStart()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onRestart()&quot; title=&quot;onRestart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onRestart()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 activity 结束 (stopped) 之后被调用，在 activity 开始(start) 前。&lt;br&gt;紧接着执行的总是 onStart()&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;否&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;onStart()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStart()&quot; title=&quot;onStart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStart()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 activity 变成可见状态时被调用。&lt;br&gt;如果 activity 接着变成前台运行 (comes to foreground)，onResume() 方法会跟着执行。&lt;br&gt;如果 activity 接着变成隐藏(hidden)状态，onStop() 方法会跟着执行&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;否&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;onResume() 或 onStop()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onResume()&quot; title=&quot;onResume&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onResume()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 activity 开始与用户交互时被调用。&lt;br&gt;这时的 activity 在 activity 栈 (activity stack) 的栈顶，用户可以进行操作（可以理解为获得焦点）。&lt;br&gt;下一个执行的总是 onPause()&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;否&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;onPause()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;当系统将要启动另外一个 activity 并将之展现到前台时，该方法被调用。&lt;br&gt;该方法常用于将未保存的变化提交到持续性存储中，停止动画以及其他的消耗CPU的行为，诸如此类。&lt;br&gt;它的代码块中代码应当被很快执行，因为直到它返回后，下一个 activity 才能被 resume（求大神，这里的 resume 应该怎么翻译比较好~） 到前台；&lt;br&gt;后面要么是跟着 onResume()（activity 重新回到前台），要么是跟着 onStop() （activity 变成对用户不可见）&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;是&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;onResume() 或 onStop()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;当 activity 不再对用户可见时被调用。&lt;br&gt;变为不可见可能是由于该 activity 被销毁 (destroyed) 了，或者是其他的 activity 恢复 (resume) 到前台并将该 activity 覆盖。&lt;br&gt;后面跟着的要么是 onRestart() （activity 重新与用户交互），要么是 onDestroy() （activity 结束）&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;是&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;onRestart() 或 onDestrooy()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onDestroy()&quot; title=&quot;onDestroy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onDestroy()&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 activity 被销毁前调用。&lt;br&gt;这是 activity 的最后一个回调。它被调用，有可能是 activity 结束了(finish() 方法被调用)，或者系统为了节约并释放资源暂时销毁了这个 activity 实例。针对这两种情况，可以使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#isFinishing(&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;isFinishing()&lt;/a&gt;) 方法进行分辨&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;是&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;nothing&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;表中的 “Killable after” 用于指示系统能否在方法返回后的任意时间，在不执行其他 activity 代码的情况下，将 activity 的进程终止。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注： Killable 为否的并不意味着不会被系统终止 (killed)，但是只有在没有其他可用资源的极端情况下才会被终止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;保存-activity-的状态&quot;&gt;&lt;a href=&quot;#保存-activity-的状态&quot; class=&quot;headerlink&quot; title=&quot;保存 activity 的状态&quot;&gt;&lt;/a&gt;保存 activity 的状态&lt;/h3&gt;&lt;p&gt;有时候，系统为了节约资源，会销毁一个 activity 对象，这是如果用户想要返回到该 activity，则不会直接 resume 到 activity 的原来状态，而是重新创建 (recreate) 一个 activity 对象。为了保证原先状态下的各种信息也能够体现在这个新对象中，就需要使用一个额外的回调方法来存储之前的 activity 状态信息，这就是 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceState()&lt;/a&gt; 方法。&lt;/p&gt;
&lt;p&gt;系统在使得 activity 变得易于摧毁 (destruction) 前调用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceState()&lt;/a&gt; 方法。该方法有一个 Bundle 类型的参数，该参数有一系列的方法，例如 &lt;a href=&quot;http://developer.android.com/reference/android/os/BaseBundle.html#putString(java.lang.String, java.lang.String&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;putString()&lt;/a&gt;), &lt;a href=&quot;http://developer.android.com/reference/android/os/BaseBundle.html#putInt(java.lang.String, int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;putInt()&lt;/a&gt;)，通过键值对 (name-value pairs) 的形式储存 activity 的状态信息。在系统摧毁并重建 activity 时，这个 Bundle 类型的参数会传递到 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle)&quot; title=&quot;onRestoreInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onRestoreInstanceState()&lt;/a&gt; 方法中。然后在这些方法中便可以取出 Bundle 中存储的状态信息并恢复 activity 状态。当没有储存状态信息时，Bundle 参数会传递一个 null 值。&lt;/p&gt;
&lt;p&gt;下图展现了 activity 恢复到前台运行状态的两种方式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.auooo.com/wp-content/uploads/2016/03/restore_instance.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注:并不能保证 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceState()&lt;/a&gt; 在 activity 被销毁 (destroyed) 前一定被调用，因为有时候并没有保存状态信息（例如用户按下后退按键结束一个 activity，这时用户就是准备结束这个 activity 的）。如果系统调用了 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceSteate()&lt;/a&gt;，会在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt; 之前调用，也有可能在 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt; 之前调用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即使我们并没有在自己的代码中实现 [onSaveInstanceState()][onSaveInstanceSate] 方法，有些 activity 的状态也会通过 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Activity&lt;/a&gt; 类 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceSate()&lt;/a&gt; 的默认实现来存储。特别地，layout 中的每个 &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View&lt;/a&gt; 都会实现对应的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceState()&lt;/a&gt; 方法，来储存它们应当要被保存的信息。Android framework 中的绝大多数控件 (widget) 都会恰如其分地实现该方法，因此在重新创建 activity 时，UI 的任何可视化变化都会被自动存储和恢复。例如，可编辑文本 (&lt;a href=&quot;http://developer.android.com/reference/android/widget/EditText.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EditText&lt;/a&gt;) 控件会储存用户输入的任何文字信息，复选框 (&lt;a href=&quot;http://developer.android.com/reference/android/widget/CheckBox.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Checkbox&lt;/a&gt;) 控件则储存着其勾选状态。我们唯一需要做的，就是给每个控件指定一个唯一的 ID (通过 &lt;a href=&quot;http://developer.android.com/guide/topics/resources/layout-resource.html#idvalue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android:id&lt;/a&gt; 属性)，这样就能够储存它们的状态了，否则系统是不能储存这些控件的状态的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：可以将 &lt;a href=&quot;http://developer.android.com/reference/android/R.attr.html#saveEnabled&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android:saveEnabled&lt;/a&gt; 属性设置为 “false”，或者调用 &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setSaveEnabled&lt;/a&gt;) 显式地禁止布局中的某个 view 储存它自己的状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceState()&lt;/a&gt; 的默认实现帮助保存 UI 的状态，因此在我们重写该方法时，要首先调用它的超类实现。同样的，在重写 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle)&quot; title=&quot;onRestoreInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onRestoreInstanceState()&lt;/a&gt; 方法时，也要同样地调用其超类实现来恢复 view 的状态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：由于 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot; title=&quot;onSaveInstanceState&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onSaveInstanceState()&lt;/a&gt; 并不能保证一定被调用，因此我们应当只用它来储存 activity 的一些暂时状态（UI 的状态），而不应该在这个方法中来储存持久性数据，储存持久性数据改用 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt; 方法来实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个用于测试应用程序状态存储的好方法是在打开应用程序时旋转屏幕，这时候系统为了应用新的屏幕参数信息，会摧毁并重建 activity。因此，在 activity 重新创建时，有之前 activity 状态的完整保存很重要。&lt;/p&gt;
&lt;h3 id=&quot;Activity-的相互协调&quot;&gt;&lt;a href=&quot;#Activity-的相互协调&quot; class=&quot;headerlink&quot; title=&quot;Activity 的相互协调&quot;&gt;&lt;/a&gt;Activity 的相互协调&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个 activity 启动另一个 activity 时，并不是在第二个 activity 启动前就完全停止了，第二个 activity 和第一个 activity 的启动过程是有重叠的。&lt;/li&gt;
&lt;li&gt;activity 的生命周期回调顺序是很清晰的，特别是两个运行于同一线程的 activity 间的相互调用。Activity A 启动 Activity B 的顺序如下：&lt;ol&gt;
&lt;li&gt;执行 Activity A 的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt; 方法&lt;/li&gt;
&lt;li&gt;按顺序执行 Activity B 的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt;, &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStart()&quot; title=&quot;onStart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStart()&lt;/a&gt;, &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onResume()&quot; title=&quot;onResume&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onResume()&lt;/a&gt; 方法（此时 Activity B 具有用户焦点）。&lt;/li&gt;
&lt;li&gt;接着，如果 Activity A 不再可见，则执行其 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt; 方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;上面的生命周期顺序可以帮助我们更好地管理各类信息的变化和传递。例如，在第一个 activity 中储存数据库信息，并使这些信息能被后一个 activity 读取，我们应该在第一个 activity 的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onPause()&quot; title=&quot;onPause&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onPause()&lt;/a&gt; 方法而不是 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onStop()&quot; title=&quot;onStop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onStop()&lt;/a&gt; 方法中进行数据的储存。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Activity-的运行过程&quot;&gt;&lt;a href=&quot;#Activity-的运行过程&quot; class=&quot;headerlink&quot; title=&quot;Activity 的运行过程&quot;&gt;&lt;/a&gt;Activity 的运行过程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;每个应用程序 (app) 都是一系列活动 (activities)，布局文件 (layouts) 和其他资源文件的集合&lt;ul&gt;
&lt;li&gt;其中的一个activity 是应用程序的 main activity&lt;/li&gt;
&lt;li&gt;每个 activity 都有一个 main activity，由 AndroidManifest.xml 文件指定 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;默认情况下每个应用程序都运行在自己的线程中&lt;/li&gt;
&lt;li&gt;通过 startActivity() 传递一个 intent 来启动另一个程序的 activity&lt;/li&gt;
&lt;li&gt;当一个 activity 需要启动时， android 会检查是否已经有一个目标 activity 所在应用程序的线程，如果线程已经存在，则直接在那个线程中启动 activity，否则的话，android 会创建一个线程&lt;/li&gt;
&lt;li&gt;Android 启动 activity 时，调用 activity 的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)&quot; title=&quot;onCreate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onCreate()&lt;/a&gt; 方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Activity-的生命周期实例&quot;&gt;&lt;a href=&quot;#Activity-的生命周期实例&quot; class=&quot;headerlink&quot; title=&quot;Activity 的生命周期实例&quot;&gt;&lt;/a&gt;Activity 的生命周期实例&lt;/h3&gt;&lt;p&gt;个人感觉 &lt;a href=&quot;http://shop.oreilly.com/product/0636920029045.do&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Head First Android Development&lt;/a&gt; 中的 StopWatch 例子讲得很好。&lt;/p&gt;
&lt;p&gt;这个小项目要做的是一个用来计时的秒表。首先是前置工作，不用多说，界面设计之类的。直接贴代码了。&lt;/p&gt;
&lt;p&gt;activity_stopwatch.xml:&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;RelativeLayout&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;xmlns:tools&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:paddingBottom&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;16dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:paddingTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;16dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:paddingLeft&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;16dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:paddingRight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;16dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;tools:context&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;.StopWatchActivity&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/time_view&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_alignParentTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_centerHorizontal&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:textAppearance&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;?android:attr/textAppearanceLarge&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;92sp&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/start_button&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_below&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/time_view&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_centerHorizontal&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;20dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:onClick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;onClickStart&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@string/start&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/stop_button&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_below&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/start_button&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_centerHorizontal&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:onClick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;onClickStop&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@string/stop&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/reset_button&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_below&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/stop_button&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_centerHorizontal&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:onClick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;onClickReset&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@string/reset&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;RelativeLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;string.xml:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;start&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Start&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stop&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Stop&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;reset&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Reset&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上是界面部分，可以看到，第一个 TextView 用于显示时间，后面跟着三个按钮，分别用于开始，暂停和结束计时。然后开始功能部分的实现。&lt;/p&gt;
&lt;h4 id=&quot;Stopwatch-version-1-0-（计时）&quot;&gt;&lt;a href=&quot;#Stopwatch-version-1-0-（计时）&quot; class=&quot;headerlink&quot; title=&quot;Stopwatch version 1.0 （计时）&quot;&gt;&lt;/a&gt;Stopwatch version 1.0 （计时）&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.hfad.stopwatch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.view.View;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StopwatchActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Number of seconds displayed on the stopwatch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Is the stopwatch running?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; running;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setContentView(R.layout.activity_stopwatch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		runTimer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Start the stopwatch running when the Start button is clicked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClickStart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Stop the stopwatch running when the Stop button is clicked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClickStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Reset the stopwatch when the Reset button is clicked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClickReset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		seconds = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Sets the number of seconds on the timer.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;runTimer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TextView timeView = (TextView)findViewById(R.id.time_view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Handler handler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Handler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		handler.post(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hours = seconds/&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minutes = (seconds%&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; secs = seconds%&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String time = String.format(&lt;span class=&quot;string&quot;&gt;&quot;%d:%02d:%02d&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				hours, minutes, secs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				timeView.setText(time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (running) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					seconds++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				handler.postDelayed(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行程序，发现可以运行成功。但是，有一个问题，就是当我们点击 START 按钮开始计时后，如果翻转屏幕，则计时器的值重新变为 00：00：00 了。原因就是系统检测到了屏幕参数的变化，因而摧毁了当前的 activity，并根据当前的屏幕参数重新创建一个 activity。重新调用 onCreate() 方法，因此就变成初始状态了。&lt;/p&gt;
&lt;h4 id=&quot;Stopwatch-version-2-0-（屏幕旋转）&quot;&gt;&lt;a href=&quot;#Stopwatch-version-2-0-（屏幕旋转）&quot; class=&quot;headerlink&quot; title=&quot;Stopwatch version 2.0 （屏幕旋转）&quot;&gt;&lt;/a&gt;Stopwatch version 2.0 （屏幕旋转）&lt;/h4&gt;&lt;p&gt;这时我们有两个解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;忽略 activity 的重建(re-create)&lt;br&gt;可以修改 AndroidManifest.xml 文件中 activity 节点的属性配置：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	android:configChanges=&quot;configuration_change&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在本例中，在 AndroidManifest.xml 文件中作以下修改：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;activity&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;com.hfad.stopwatch.StopwatchActivity&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@string/app_name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;android:configChanges&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;orientation|screenSize&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;“|” 符号代表或，也就是说忽略这两种情况。如果 android 系统遇到了上面的这种配置改变，就会调用 onConfigurationChanged(Configuration) 方法，而不是去重建 activity。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保存当前的状态值&lt;br&gt;在 onSaveInstanceState() 方法中，利用 Bundle 的一系列 put 方法，以键值对的形式将 activity 状态数据放入 Bundle 中。&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void onSaveInstanceState(Bundle savedInstanceState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	savedInstanceState.putInt(&quot;seconds&quot;, seconds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	savedInstanceState.putBoolean(&quot;running&quot;, running);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后在 onCreate() 方法中恢复这些数据&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setContentView(R.layout.activity_stopwatch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (savedInstanceState != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		seconds = savedInstanceState.getInt(&lt;span class=&quot;string&quot;&gt;&quot;seconds&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = savedInstanceState.getBoolean(&lt;span class=&quot;string&quot;&gt;&quot;running&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	runTimer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Stopwatch-version-3-0-（不可见时暂停计时）&quot;&gt;&lt;a href=&quot;#Stopwatch-version-3-0-（不可见时暂停计时）&quot; class=&quot;headerlink&quot; title=&quot;Stopwatch version 3.0 （不可见时暂停计时）&quot;&gt;&lt;/a&gt;Stopwatch version 3.0 （不可见时暂停计时）&lt;/h4&gt;&lt;p&gt;这时候需求又变更了，我们希望来电话时，我们的 stopwatch 能够自动停止计时。换句话说，只有它可见的时候，我们才希望触发计时。但是经过测试发现，即使是来电时也还是继续在后台进行计时的，不满足需求。这时候就要考虑使用生命周期回调函数中的 onStop() 和 onStart() 方法了。修改代码如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StopwatchActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; running;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; wasRunning;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setContentView(R.layout.activity_stopwatch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (savedInstanceState != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			seconds = savedInstanceState.getInt(&lt;span class=&quot;string&quot;&gt;&quot;seconds&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			running = savedInstanceState.getBoolean(&lt;span class=&quot;string&quot;&gt;&quot;running&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			wasRunning = savedInstanceState.getBoolean(&lt;span class=&quot;string&quot;&gt;&quot;wasRunning&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		runTimer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onSaveInstanceState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		savedInstanceState.putInt(&lt;span class=&quot;string&quot;&gt;&quot;seconds&quot;&lt;/span&gt;, seconds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		savedInstanceState.putBoolean(&lt;span class=&quot;string&quot;&gt;&quot;running&quot;&lt;/span&gt;, running);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		savedInstanceState.putBoolean(&lt;span class=&quot;string&quot;&gt;&quot;wasRunning&quot;&lt;/span&gt;, wasRunning);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wasRunning = running;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wasRunning) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			running = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Stopwatch-versin-4-0-如果可见但是失去焦点，怎么办呢？&quot;&gt;&lt;a href=&quot;#Stopwatch-versin-4-0-如果可见但是失去焦点，怎么办呢？&quot; class=&quot;headerlink&quot; title=&quot;Stopwatch versin 4.0 (如果可见但是失去焦点，怎么办呢？)&quot;&gt;&lt;/a&gt;Stopwatch versin 4.0 (如果可见但是失去焦点，怎么办呢？)&lt;/h4&gt;&lt;p&gt;有时候可能会有并不是全屏形式的弹窗，这时候 stopwatch 还是可见的，只不过在它的上层还有其他的 activity。我们希望也能够自动停止计时。这时就需要使用到 onResume() 和 onPause() 两个方法了。代码如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.hfad.stopwatch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.view.View;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StopwatchActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Number of seconds displayed on the stopwatch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Is the stopwatch running?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; running;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; wasRunning;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setContentView(R.layout.activity_stopwatch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (savedInstanceState != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			seconds = savedInstanceState.getInt(&lt;span class=&quot;string&quot;&gt;&quot;seconds&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			running = savedInstanceState.getBoolean(&lt;span class=&quot;string&quot;&gt;&quot;running&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			wasRunning = savedInstanceState.getBoolean(&lt;span class=&quot;string&quot;&gt;&quot;wasRunning&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		runTimer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onPause();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wasRunning = running;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onResume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wasRunning) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			running = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onSaveInstanceState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		savedInstanceState.putInt(&lt;span class=&quot;string&quot;&gt;&quot;seconds&quot;&lt;/span&gt;, seconds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		savedInstanceState.putBoolean(&lt;span class=&quot;string&quot;&gt;&quot;running&quot;&lt;/span&gt;, running);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		savedInstanceState.putBoolean(&lt;span class=&quot;string&quot;&gt;&quot;wasRunning&quot;&lt;/span&gt;, wasRunning);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Start the stopwatch running when the Start button is clicked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClickStart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Stop the stopwatch running when the Stop button is clicked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClickStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Reset the stopwatch when the Reset button is clicked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClickReset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		running = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		seconds = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Sets the number of seconds on the timer.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;runTimer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TextView timeView = (TextView)findViewById(R.id.time_view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Handler handler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Handler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		handler.post(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hours = seconds/&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minutes = (seconds%&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; secs = seconds%&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String time = String.format(&lt;span class=&quot;string&quot;&gt;&quot;%d:%02d:%02d&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				hours, minutes, secs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				timeView.setText(time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (running) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					seconds++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				handler.postDelayed(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此，最终我们的 stopwatch，既可以满足不受屏幕旋转的影响，又可以根据是否有其他更高层次的 activity 运行从而智能暂停和继续计时。而在这过程中，也用到了所有的生命周期回调函数方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;2016.3.11&lt;/li&gt;
&lt;li&gt;android-sdk-23&lt;/li&gt;
&lt;li&gt;文中的部分中文术语是自己看文档理解着翻译的，可能有不准确之处，欢迎指出&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Activi
    
    </summary>
    
    
  </entry>
  
</feed>
